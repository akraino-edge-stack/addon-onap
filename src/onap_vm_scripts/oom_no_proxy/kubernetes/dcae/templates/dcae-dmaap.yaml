#{{ if not .Values.disableDcaeDmaap }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dmaap
  namespace: "{{ .Values.nsPrefix }}-dcae"
spec:
  selector:
    matchLabels:
      app: dmaap
  template:
    metadata:
      labels:
        app: dmaap
      name: dmaap
#      annotations:
#        pod.beta.kubernetes.io/init-containers: '[
#          {
#              "args": [
#                  "--container-name",
#                  "kafka",
#                  "--container-name",
#                  "zookeeper"
#              ],
#              "command": [
#                  "/root/ready.py"
#              ],
#              "env": [
#                  {
#                      "name": "NAMESPACE",
#                      "valueFrom": {
#                          "fieldRef": {
#                              "apiVersion": "v1",
#                              "fieldPath": "metadata.namespace"
#                          }
#                      }
#                  }
#              ],
#              "image": "{{ .Values.image.readiness }}",
#              "imagePullPolicy": "{{ .Values.pullPolicy }}",
#              "name": "dmaap-readiness"
#          }
#          ]'
    spec:
      initContainers:
      - name: dmaap-readiness
        command: ['sh', '-c', '/root/ready.py --container-name kafka --container-name zookeeper']
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: {{ .Values.image.readiness }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        volumeMounts:
        - mountPath: /root/.kube/config
          name: kubeconf
      containers:
      - image: {{ .Values.image.dmaap }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        name: dmaap
        ports:
        - containerPort: 3904
        - containerPort: 3905
        readinessProbe:
          tcpSocket:
            port: 3904
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - mountPath: /appl/dmaapMR1/bundleconfig/etc/appprops/MsgRtrApi.properties
          name: appprops
        - mountPath: /appl/dmaapMR1/etc/cadi.properties
          name: cadi
        - mountPath: /appl/dmaapMR1/etc/keyfile
          name: mykey
      restartPolicy: Always
      volumes:
      - name: appprops
        hostPath:
          path: /dockerdata-nfs/{{ .Values.nsPrefix }}/dcae/message-router/dmaap/MsgRtrApi.properties
      - name: cadi
        hostPath:
          path: /dockerdata-nfs/{{ .Values.nsPrefix }}/dcae/message-router/dmaap/cadi.properties
      - name: mykey
        hostPath:
          path: /dockerdata-nfs/{{ .Values.nsPrefix }}/dcae/message-router/dmaap/mykey
      - name: kubeconf
        hostPath:
          path: /root/.kube/config
      imagePullSecrets:
      - name: "{{ .Values.nsPrefix }}-docker-registry-key"
#{{ end }}