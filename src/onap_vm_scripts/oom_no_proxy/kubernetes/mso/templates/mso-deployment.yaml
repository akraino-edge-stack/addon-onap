#{{ if not .Values.disableMsoMso }}
#apiVersion: extensions/v1beta1
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mso
  namespace: "{{ .Values.nsPrefix }}-mso"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mso
  template:
    metadata:
      labels:
        app: mso
      name: mso
#      annotations:
#        pod.beta.kubernetes.io/init-containers: '[
#          {
#              "args": [
#                  "--container-name",
#                  "mariadb"
#              ],
#              "command": [
#                  "/root/ready.py"
#              ],
#              "env": [
#                  {
#                      "name": "NAMESPACE",
#                      "valueFrom": {
#                          "fieldRef": {
#                              "apiVersion": "v1",
#                              "fieldPath": "metadata.namespace"
#                          }
#                      }
#                  }
#              ],
#              "image": "{{ .Values.image.readiness }}",
#              "imagePullPolicy": "{{ .Values.pullPolicy }}",
#              "name": "mso-readiness",
#              "volumeMounts": [
#                  {
#                      "mountPath": "/root/.kube/config",
#                      "name": "kubeconf"
#                  } 
#              ]
#          }
#          ]'
    spec:
      hostAliases:
      - ip: "{{ .Values.ingressControllerIP }}"
        hostnames:
        - "cinder.openstack.svc.cluster.local"
        - "cinder.openstack"
        - "cinder"
        - "cloudformation.openstack.svc.cluster.local"
        - "cloudformation.openstack"
        - "cloudformation"
        - "cloudwatch.openstack.svc.cluster.local"
        - "cloudwatch.openstack"
        - "cloudwatch"
        - "glance.openstack.svc.cluster.local"
        - "glance.openstack"
        - "glance"
        - "glance-reg.openstack.svc.cluster.local"
        - "glance-reg.openstack"
        - "glance-reg"
        - "heat.openstack.svc.cluster.local"
        - "heat.openstack"
        - "heat"
        - "horizon.openstack.svc.cluster.local"
        - "horizon.openstack"
        - "horizon"
        - "keystone.openstack.svc.cluster.local"
        - "keystone.openstack"
        - "keystone"
        - "keystone-api.openstack.svc.cluster.local"
        - "keystone-api.openstack"
        - "keystone-api"
        - "metadata.openstack.svc.cluster.local"
        - "metadata.openstack"
        - "metadata"
        - "neutron.openstack.svc.cluster.local"
        - "neutron.openstack"
        - "neutron"
        - "nova.openstack.svc.cluster.local"
        - "nova.openstack"
        - "nova"
        - "placement.openstack.svc.cluster.local"
        - "placement.openstack"
        - "placement"
      initContainers:
      - name: mso-db-readiness
        command: ['sh', '-c', '/root/ready.py --container-name mariadb']
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: {{ .Values.image.readiness }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        volumeMounts:
        - mountPath: /root/.kube/config
          name: kubeconf
      containers:
      - image: {{ .Values.image.mso }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        name: mso
#        command:
#        - /bin/bash
#        - -c
#        - sleep 1m && echo "Start MSO" && /tmp/start-jboss-server.sh
        volumeMounts:
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
        - mountPath: /shared
          name: mso
        - mountPath: /tmp/start-jboss-server.sh
          name: mso-docker-files
        - mountPath: /var/log/ecomp
          name: mso-logs
        - mountPath: /var/berks-cookbooks/mso-config/files/default/mso-api-handler-infra-config/logback.apihandler-infra.xml
          name: logback-apihandler-infra
        - mountPath: /var/berks-cookbooks/mso-config/files/default/mso-po-adapter-config/logback.network.xml
          name: logback-network
        - mountPath: /var/berks-cookbooks/mso-config/files/default/mso-po-adapter-config/logback.tenant.xml
          name: logback-tenant
        - mountPath: /var/berks-cookbooks/mso-config/files/default/mso-po-adapter-config/logback.vnf.xml
          name: logback-vnf
        - mountPath: /var/berks-cookbooks/mso-config/files/default/mso-po-adapter-config/logback.vfc.xml
          name: logback-vfc
        - mountPath: /var/berks-cookbooks/mso-config/files/default/mso-appc-adapter-config/logback.appc.xml
          name: logback-appc
        - mountPath: /var/berks-cookbooks/mso-config/files/default/mso-requests-db-adapter-config/logback.msorequestsdbadapter.xml
          name: logback-msorequestsdbadapter
        - mountPath: /var/berks-cookbooks/mso-config/files/default/mso-asdc-controller-config/logback.asdc.xml
          name: logback-asdc
        - mountPath: /var/berks-cookbooks/mso-config/files/default/mso-sdnc-adapter-config/logback.sdnc.xml
          name: logback-sdnc
        - mountPath: /var/berks-cookbooks/mso-config/files/default/mso-bpmn-config/logback.bpmn.xml
          name: logback-bpmn
        - mountPath: /var/berks-cookbooks/mso-config/files/default/mso-workflow-message-adapter-config/logback.workflow-message-adapter.xml
          name: logback-workflow-message-adapter
        env:
        - name: JBOSS_DEBUG
          value: "false"
        ports:
        - containerPort: 3904
        - containerPort: 3905
        - containerPort: 8080
        - containerPort: 9990
        - containerPort: 8787
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 800
          periodSeconds: 10
      - image: {{ .Values.image.filebeat }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        name: filebeat-onap
        volumeMounts:
        - mountPath: /usr/share/filebeat/filebeat.yml
          name: filebeat-conf
        - mountPath: /var/log/onap
          name: mso-logs
        - mountPath: /usr/share/filebeat/data
          name: mso-data-filebeat
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: logback-apihandler-infra
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/log/mso/logback.apihandler-infra.xml
        - name: logback-network
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/log/mso/logback.network.xml
        - name: logback-tenant
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/log/mso/logback.tenant.xml
        - name: logback-vnf
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/log/mso/logback.vnf.xml
        - name: logback-vfc
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/log/mso/logback.vfc.xml
        - name: logback-appc
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/log/mso/logback.appc.xml
        - name: logback-msorequestsdbadapter
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/log/mso/logback.msorequestsdbadapter.xml
        - name: logback-asdc
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/log/mso/logback.asdc.xml
        - name: logback-sdnc
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/log/mso/logback.sdnc.xml
        - name: logback-bpmn
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/log/mso/logback.bpmn.xml
        - name: logback-workflow-message-adapter
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/log/mso/logback.workflow-message-adapter.xml
        - name: mso
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/mso/mso
        - name: filebeat-conf
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/log/filebeat/logback/filebeat.yml
        - name: mso-logs
          emptyDir: {}
        - name: mso-data-filebeat
          emptyDir: {}
        - name: mso-docker-files
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/mso/docker-files/scripts/start-jboss-server.sh
        - name: kubeconf
          hostPath:
            path: /root/.kube/config
      imagePullSecrets:
      - name: "{{ .Values.nsPrefix }}-docker-registry-key"
#{{ end }}
