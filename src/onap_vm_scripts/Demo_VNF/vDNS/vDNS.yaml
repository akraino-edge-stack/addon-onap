# Copyright Â© 2018 AT&T Intellectual Property. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

heat_template_version: 2015-10-15
description: |
  Heat template to create vDNS demo VNF for AEC.


parameters:
 


  network_id:
    type: string
    description: OpenStack network ID used by the vDNS server

  flavor_name:
    type: string
    description: Name of the Flavor used to create the vDNS VM

  key_name:
    type: string
    description: Public/Private key pair name

  pub_key:
    type: string
    description: Public key to be installed on the compute instance

  image_name:
    type: string
    description: Name of the image to use

  http_proxy:
    type: string
    description: http proxy setting

  https_proxy:
    type: string
    description: https proxy setting

  no_proxy:
    type: string
    description: no proxy setting

resources:
  random-str:
    type: OS::Heat::RandomString
    properties:
      length: 4

  # Public key used to access ONAP components
  vm_key:
    type: OS::Nova::KeyPair
    properties:
      name:
        str_replace:
          template: base_rand
          params:
            base: { get_param: key_name }
            rand: { get_resource: random-str }
      public_key: { get_param: pub_key }
      save_private_key: false

  vdns_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: vdns_security_group
      description: Security group for vDNS vnf resources
      rules:
        - direction: ingress
          ethertype: IPv4
          port_range_min: 53
          port_range_max: 53
          protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
        - direction: ingress
          ethertype: IPv4
          port_range_min: 53
          port_range_max: 53
          protocol: udp
          remote_ip_prefix: 0.0.0.0/0
        - direction: ingress
          ethertype: IPv4
          port_range_min: 22
          port_range_max: 22
          protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
        - direction: ingress
          ethertype: IPv4
          port_range_min: 0
          port_range_max: 255
          protocol: icmp
          remote_ip_prefix: 0.0.0.0/0
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp

  vDNS_VM:
    type: OS::Nova::Server
    properties:
      image: { get_param: image_name }
      flavor: { get_param: flavor_name }
      name: vDNS_server
      key_name: { get_resource: vm_key }
      networks:
        - network: { get_param: network_id }
      security_groups:
        - { get_resource: vdns_security_group }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            __http_proxy__: { get_param: http_proxy }
            __https_proxy__: { get_param: https_proxy }
            __no_proxy__: { get_param: no_proxy }
          template: |
            #!/bin/bash

            echo "Start deploying ONAP"
            echo "127.0.0.1 vdns-server" | tee -a /etc/hosts
            # Download and run install script


            # Create configuration files
            mkdir -p /opt/config
            echo "__http_proxy__" > /opt/config/http_proxy.txt
            echo "__https_proxy__" > /opt/config/https_proxy.txt
            echo "__no_proxy__" > /opt/config/no_proxy.txt



            HTTPPROXY=$(cat /opt/config/http_proxy.txt)
            HTTPSPROXY=$(cat /opt/config/https_proxy.txt)
            NOPROXY=$(cat /opt/config/no_proxy.txt)

            defaultinterface=$(route | grep default | awk '{ print $8}')
            myip=$(ifconfig  $defaultinterface | grep 'inet addr' | awk '{ gsub("addr:",""); print $2} ')

            echo "$myip vdns-server.simpledemo.aec.org" | tee -a /etc/hosts

            if [[ ! -z $HTTPPROXY ]]; then
                echo "Acquire::http::Proxy \"$HTTPPROXY\";" | tee -a /etc/apt/apt.conf
                export http_proxy=$HTTPPROXY
                export https_proxy=$HTTPSPROXY
                export no_proxy=$myip,$NOPROXY
            fi

            apt-get update
            apt-get install -y bind9		

            echo | sudo tee /etc/bind/named.conf.options <<EOL
            options {
                directory "/var/cache/bind";
                forwarders {
                    8.8.8.8;
                };
                dnssec-validation auto;
                auth-nxdomain no;    # conform to RFC1035
                listen-on-v6 { any; };
            };
            EOL


            echo | sudo tee /etc/bind/named.conf.local <<EOL
            zone "simpledemo.aec.org" {
                type master;
                file "/etc/bind/zones/db.simpledemo.aec.org";
            };
            EOL

            mkdir /etc/bind/zones

            echo | sudo tee /etc/bind/zones/db.simpledemo.aec.org <<EOL
            \$TTL    604800
            @       IN      SOA     vdns-server.simpledemo.aec.org. admin.simpledemo.aec.org. (
                                          2         ; Serial
                                     604800         ; Refresh
                                      86400         ; Retry
                                    2419200         ; Expire
                                     604800 )       ; Negative Cache TTL
            simpledemo.aec.org.     IN      NS      vdns-server
            simpledemo.aec.org.     IN      A       $myip
            vdns-server     IN      A       $myip
            testserver      IN      A       10.24.24.24
            www     in      CNAME   simpledemo.aec.org.
            EOL


            echo | sudo tee /etc/resolv.conf <<EOL
            nameserver $myip
            domain simpledemo.aec.org
            search simpledemo.aec.org
            EOL

            /etc/init.d/bind9 restart
